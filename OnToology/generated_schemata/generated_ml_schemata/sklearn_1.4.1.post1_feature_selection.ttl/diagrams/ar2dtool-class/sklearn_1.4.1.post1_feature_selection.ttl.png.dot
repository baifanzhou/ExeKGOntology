digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "ml:RFEMethod" "ml:SelectFromModelMethod" "ml:SelectPercentileMethod" "ml:GenericUnivariateSelectMethod" "ml:SelectFdrMethod" "ml:SelectKBestMethod" "ml:SequentialFeatureSelectorMethod" "ml:RFECVMethod" "ml:MutualInfoClassifMethod" "ml:FRegressionMethod" ; /*classes style*/
	"ml:hasParamImportanceGetter" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMinFeaturesToSelect" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamParam" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxFeatures" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDirection" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPrefit" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamStep" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamForceFinite" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamRandomState" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamVerbose" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasFeatureSelectionMethod" -> "ml:hasPrepareTransformerMethod" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNFeaturesToSelect" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamThreshold" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPercentile" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNJobs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCopy" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoring" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMode" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCv" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEstimator" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAlpha" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNNeighbors" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamK" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCenter" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNormOrder" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDiscreteFeatures" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTol" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoreFunc" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:SequentialFeatureSelectorMethod" -> "xsd:float" [ label = "ml:hasParamTol" ];
	"ml:SelectFromModelMethod" -> "xsd:boolean" [ label = "ml:hasParamPrefit" ];
	"ml:GenericUnivariateSelectMethod" -> "xsd:float" [ label = "ml:hasParamParam" ];
	"ml:GenericUnivariateSelectMethod" -> "xsd:string" [ label = "ml:hasParamMode" ];
	"ml:RFECVMethod" -> "xsd:string" [ label = "ml:hasParamImportanceGetter" ];
	"ml:SelectPercentileMethod" -> "xsd:int" [ label = "ml:hasParamPercentile" ];
	"ml:RFEMethod" -> "xsd:float" [ label = "ml:hasParamNFeaturesToSelect" ];
	"ml:SelectFdrMethod" -> "xsd:float" [ label = "ml:hasParamAlpha" ];
	"ml:RFECVMethod" -> "xsd:int" [ label = "ml:hasParamCv" ];
	"ml:RFECVMethod" -> "xsd:string" [ label = "ml:hasParamScoring" ];
	"ml:SequentialFeatureSelectorMethod" -> "xsd:string" [ label = "ml:hasParamDirection" ];
	"ml:MutualInfoClassifMethod" -> "xsd:boolean" [ label = "ml:hasParamCopy" ];
	"ml:MutualInfoClassifMethod" -> "xsd:int" [ label = "ml:hasParamNNeighbors" ];
	"ml:RFECVMethod" -> "xsd:int" [ label = "ml:hasParamVerbose" ];
	"ml:MutualInfoClassifMethod" -> "xsd:int" [ label = "ml:hasParamRandomState" ];
	"ml:GenericUnivariateSelectMethod" -> "xsd:string" [ label = "ml:hasParamScoreFunc" ];
	"ml:MutualInfoClassifMethod" -> "xsd:boolean" [ label = "ml:hasParamDiscreteFeatures" ];
	"ml:SelectFromModelMethod" -> "xsd:int" [ label = "ml:hasParamMaxFeatures" ];
	"ml:FRegressionMethod" -> "xsd:boolean" [ label = "ml:hasParamForceFinite" ];
	"ml:RFECVMethod" -> "xsd:string" [ label = "ml:hasParamEstimator" ];
	"ml:FRegressionMethod" -> "xsd:boolean" [ label = "ml:hasParamCenter" ];
	"ml:FeatureSelection" -> "ml:FRegressionMethod" [ label = "ml:hasFeatureSelectionMethod" ];
	"ml:RFECVMethod" -> "xsd:float" [ label = "ml:hasParamStep" ];
	"ml:RFECVMethod" -> "xsd:int" [ label = "ml:hasParamNJobs" ];
	"ml:SelectFromModelMethod" -> "xsd:int" [ label = "ml:hasParamNormOrder" ];
	"ml:SelectFromModelMethod" -> "xsd:float" [ label = "ml:hasParamThreshold" ];
	"ml:SelectKBestMethod" -> "xsd:int" [ label = "ml:hasParamK" ];
	"ml:RFECVMethod" -> "xsd:int" [ label = "ml:hasParamMinFeaturesToSelect" ];

}
