digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "ml:BisectingKMeansMethod" "ml:SpectralBiclusteringMethod" "ml:AgglomerativeClusteringMethod" "ml:OPTICSMethod" "ml:DBSCANMethod" "ml:AffinityPropagationMethod" "ml:FeatureAgglomerationMethod" "ml:HDBSCANMethod" "ml:SpectralClusteringMethod" "ml:MiniBatchKMeansMethod" "ml:MeanShiftMethod" "ml:BirchMethod" ; /*classes style*/
	"ml:hasParamNBest" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamVerbose" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAlpha" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamStoreCenters" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxClusterSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxNoImprovement" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNSvdVecs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamClusterSelectionMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPreference" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNNeighbors" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBinSeeding" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAllowSingleCluster" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAlgorithm" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSvdMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamComputeDistances" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBranchingFactor" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMemory" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMetric" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamClusterMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamRandomState" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDegree" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamClusterAll" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamComputeFullTree" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReassignmentRatio" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxEps" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAssignLabels" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamConnectivity" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasClusteringMethod" -> "ml:hasTrainMethod" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAffinity" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCopyX" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamClusterSelectionEpsilon" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNClusters" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCoef0" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamInit" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamComputeLabels" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDistanceThreshold" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMinBinFreq" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBatchSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNComponents" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamKernelParams" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPredecessorCorrection" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEps" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMetricParams" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxIter" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNInit" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamThreshold" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMinClusterSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamLinkage" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSeeds" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamLeafSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEigenSolver" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTol" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEigenTol" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamGamma" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasDecompositionMethod" -> "ml:hasPrepareTransformerMethod" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCopy" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBandwidth" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPoolingFunc" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamConvergenceIter" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNJobs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDamping" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBisectingStrategy" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMiniBatch" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMinSamples" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamInitSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamP" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:string" [ label = "ml:hasParamConnectivity" ];
	"ml:BirchMethod" -> "xsd:boolean" [ label = "ml:hasParamComputeLabels" ];
	"ml:MiniBatchKMeansMethod" -> "xsd:int" [ label = "ml:hasParamInitSize" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:int" [ label = "ml:hasParamNBest" ];
	"ml:HDBSCANMethod" -> "xsd:int" [ label = "ml:hasParamMaxClusterSize" ];
	"ml:Decomposition" -> "ml:FeatureAgglomerationMethod" [ label = "ml:hasDecompositionMethod" ];
	"ml:SpectralClusteringMethod" -> "xsd:string" [ label = "ml:hasParamEigenSolver" ];
	"ml:SpectralClusteringMethod" -> "xsd:string" [ label = "ml:hasParamKernelParams" ];
	"ml:HDBSCANMethod" -> "xsd:string" [ label = "ml:hasParamClusterSelectionMethod" ];
	"ml:HDBSCANMethod" -> "xsd:float" [ label = "ml:hasParamAlpha" ];
	"ml:FeatureAgglomerationMethod" -> "xsd:string" [ label = "ml:hasParamPoolingFunc" ];
	"ml:HDBSCANMethod" -> "xsd:float" [ label = "ml:hasParamClusterSelectionEpsilon" ];
	"ml:DBSCANMethod" -> "xsd:int" [ label = "ml:hasParamMinSamples" ];
	"ml:MiniBatchKMeansMethod" -> "xsd:float" [ label = "ml:hasParamReassignmentRatio" ];
	"ml:OPTICSMethod" -> "xsd:float" [ label = "ml:hasParamMaxEps" ];
	"ml:BisectingKMeansMethod" -> "xsd:boolean" [ label = "ml:hasParamCopyX" ];
	"ml:MeanShiftMethod" -> "xsd:float" [ label = "ml:hasParamBandwidth" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:string" [ label = "ml:hasParamMethod" ];
	"ml:SpectralClusteringMethod" -> "xsd:int" [ label = "ml:hasParamNNeighbors" ];
	"ml:AffinityPropagationMethod" -> "xsd:string" [ label = "ml:hasParamAffinity" ];
	"ml:BirchMethod" -> "xsd:string" [ label = "ml:hasParamNClusters" ];
	"ml:MeanShiftMethod" -> "xsd:int" [ label = "ml:hasParamMinBinFreq" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:boolean" [ label = "ml:hasParamComputeDistances" ];
	"ml:MeanShiftMethod" -> "xsd:string" [ label = "ml:hasParamSeeds" ];
	"ml:DBSCANMethod" -> "xsd:float" [ label = "ml:hasParamEps" ];
	"ml:SpectralClusteringMethod" -> "xsd:float" [ label = "ml:hasParamGamma" ];
	"ml:AffinityPropagationMethod" -> "xsd:float" [ label = "ml:hasParamDamping" ];
	"ml:SpectralClusteringMethod" -> "xsd:float" [ label = "ml:hasParamDegree" ];
	"ml:BirchMethod" -> "xsd:int" [ label = "ml:hasParamBranchingFactor" ];
	"ml:DBSCANMethod" -> "xsd:float" [ label = "ml:hasParamP" ];
	"ml:BisectingKMeansMethod" -> "xsd:string" [ label = "ml:hasParamInit" ];
	"ml:MiniBatchKMeansMethod" -> "xsd:int" [ label = "ml:hasParamBatchSize" ];
	"ml:SpectralClusteringMethod" -> "xsd:float" [ label = "ml:hasParamEigenTol" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:int" [ label = "ml:hasParamNComponents" ];
	"ml:DBSCANMethod" -> "xsd:string" [ label = "ml:hasParamMetricParams" ];
	"ml:DBSCANMethod" -> "xsd:int" [ label = "ml:hasParamNJobs" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:string" [ label = "ml:hasParamMemory" ];
	"ml:BisectingKMeansMethod" -> "xsd:string" [ label = "ml:hasParamBisectingStrategy" ];
	"ml:HDBSCANMethod" -> "xsd:boolean" [ label = "ml:hasParamAllowSingleCluster" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:boolean" [ label = "ml:hasParamMiniBatch" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:string" [ label = "ml:hasParamSvdMethod" ];
	"ml:BisectingKMeansMethod" -> "xsd:string" [ label = "ml:hasParamAlgorithm" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:float" [ label = "ml:hasParamDistanceThreshold" ];
	"ml:BisectingKMeansMethod" -> "xsd:float" [ label = "ml:hasParamTol" ];
	"ml:OPTICSMethod" -> "xsd:string" [ label = "ml:hasParamClusterMethod" ];
	"ml:HDBSCANMethod" -> "xsd:int" [ label = "ml:hasParamMinClusterSize" ];
	"ml:DBSCANMethod" -> "xsd:int" [ label = "ml:hasParamLeafSize" ];
	"ml:MiniBatchKMeansMethod" -> "xsd:int" [ label = "ml:hasParamMaxNoImprovement" ];
	"ml:MeanShiftMethod" -> "xsd:boolean" [ label = "ml:hasParamClusterAll" ];
	"ml:AffinityPropagationMethod" -> "xsd:int" [ label = "ml:hasParamConvergenceIter" ];
	"ml:AffinityPropagationMethod" -> "xsd:float" [ label = "ml:hasParamPreference" ];
	"ml:SpectralClusteringMethod" -> "xsd:string" [ label = "ml:hasParamAssignLabels" ];
	"ml:Clustering" -> "ml:SpectralClusteringMethod" [ label = "ml:hasClusteringMethod" ];
	"ml:AffinityPropagationMethod" -> "xsd:int" [ label = "ml:hasParamMaxIter" ];
	"ml:SpectralClusteringMethod" -> "xsd:float" [ label = "ml:hasParamCoef0" ];
	"ml:AffinityPropagationMethod" -> "xsd:boolean" [ label = "ml:hasParamCopy" ];
	"ml:AffinityPropagationMethod" -> "xsd:boolean" [ label = "ml:hasParamVerbose" ];
	"ml:AffinityPropagationMethod" -> "xsd:int" [ label = "ml:hasParamRandomState" ];
	"ml:HDBSCANMethod" -> "xsd:string" [ label = "ml:hasParamStoreCenters" ];
	"ml:OPTICSMethod" -> "xsd:boolean" [ label = "ml:hasParamPredecessorCorrection" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:boolean" [ label = "ml:hasParamComputeFullTree" ];
	"ml:SpectralBiclusteringMethod" -> "xsd:int" [ label = "ml:hasParamNSvdVecs" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:string" [ label = "ml:hasParamMetric" ];
	"ml:AgglomerativeClusteringMethod" -> "xsd:string" [ label = "ml:hasParamLinkage" ];
	"ml:BirchMethod" -> "xsd:float" [ label = "ml:hasParamThreshold" ];
	"ml:MeanShiftMethod" -> "xsd:boolean" [ label = "ml:hasParamBinSeeding" ];
	"ml:BisectingKMeansMethod" -> "xsd:int" [ label = "ml:hasParamNInit" ];

}
