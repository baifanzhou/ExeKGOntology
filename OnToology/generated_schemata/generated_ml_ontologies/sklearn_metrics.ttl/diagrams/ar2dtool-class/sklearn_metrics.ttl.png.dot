digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "ml:JaccardScoreMethod" "ml:PrecisionScoreMethod" "ml:PairwiseDistancesArgminMethod" "ml:HingeLossMethod" "ml:AccuracyScoreMethod" "ml:NanEuclideanDistancesMethod" "ml:D2PinballScoreMethod" "ml:PairwiseKernelsMethod" "ml:AdjustedMutualInfoScoreMethod" "ml:FowlkesMallowsScoreMethod" "ml:MutualInfoScoreMethod" "ml:MeanAbsolutePercentageErrorMethod" "ml:PrecisionRecallFscoreSupportMethod" "ml:PairwiseDistancesMethod" "ml:SilhouetteScoreMethod" "ml:CheckScoringMethod" "ml:CohenKappaScoreMethod" "ml:LogLossMethod" "ml:D2TweedieScoreMethod" "ml:MakeScorerMethod" "ml:ExplainedVarianceScoreMethod" "ml:BalancedAccuracyScoreMethod" "ml:MultilabelConfusionMatrixMethod" "ml:PrecisionRecallCurveMethod" "ml:FbetaScoreMethod" "ml:ConsensusScoreMethod" "ml:PairwiseDistancesChunkedMethod" "ml:PairwiseDistancesArgminMinMethod" "ml:RocAucScoreMethod" "ml:EuclideanDistancesMethod" "ml:DcgScoreMethod" "ml:ClassificationReportMethod" "ml:ClassLikelihoodRatiosMethod" ; /*classes style*/
	"ml:hasParamDropIntermediate" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAlpha" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSampleSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAverage" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMetricKwargs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNeedsThreshold" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamWeights" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMetric" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamRaiseWarning" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamRandomState" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamGreaterIsBetter" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamIgnoreTies" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAverageMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReduceFunc" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSquared" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoring" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamB" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNormalize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamDigits" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMissingValues" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMultioutput" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamFilterParams" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNeedsProba" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAdjusted" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamOutputDict" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamA" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAllowNone" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEps" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamContingency" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSimilarity" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamBeta" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPower" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamLogBase" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSamplewise" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamWorkingMemory" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasPerformanceCalculationMethod" -> "ml:hasPerformanceCalculationMethod" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamSparse" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCopy" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamForceAllFinite" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamK" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoreFunc" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNJobs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamZeroDivision" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPredDecision" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamForceFinite" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamWarnFor" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPosLabel" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMultiClass" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamAxis" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamResponseMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:ConsensusScoreMethod" -> "xsd:string" [ label = "ml:hasParamA" ];
	"ml:ConsensusScoreMethod" -> "xsd:string" [ label = "ml:hasParamB" ];
	"ml:NanEuclideanDistancesMethod" -> "xsd:float" [ label = "ml:hasParamMissingValues" ];
	"ml:PerformanceCalculation" -> "ml:MeanAbsolutePercentageErrorMethod" [ label = "ml:hasPerformanceCalculationMethod" ];
	"ml:PairwiseDistancesChunkedMethod" -> "xsd:string" [ label = "ml:hasParamReduceFunc" ];
	"ml:PairwiseDistancesMethod" -> "xsd:boolean" [ label = "ml:hasParamForceAllFinite" ];
	"ml:ClassificationReportMethod" -> "xsd:boolean" [ label = "ml:hasParamOutputDict" ];
	"ml:BalancedAccuracyScoreMethod" -> "xsd:boolean" [ label = "ml:hasParamAdjusted" ];
	"ml:MultilabelConfusionMatrixMethod" -> "xsd:boolean" [ label = "ml:hasParamSamplewise" ];
	"ml:JaccardScoreMethod" -> "xsd:string" [ label = "ml:hasParamZeroDivision" ];
	"ml:MakeScorerMethod" -> "xsd:string" [ label = "ml:hasParamResponseMethod" ];
	"ml:ConsensusScoreMethod" -> "xsd:string" [ label = "ml:hasParamSimilarity" ];
	"ml:D2TweedieScoreMethod" -> "xsd:float" [ label = "ml:hasParamPower" ];
	"ml:PairwiseDistancesChunkedMethod" -> "xsd:float" [ label = "ml:hasParamWorkingMemory" ];
	"ml:D2PinballScoreMethod" -> "xsd:float" [ label = "ml:hasParamAlpha" ];
	"ml:DcgScoreMethod" -> "xsd:boolean" [ label = "ml:hasParamIgnoreTies" ];
	"ml:SilhouetteScoreMethod" -> "xsd:int" [ label = "ml:hasParamSampleSize" ];
	"ml:CheckScoringMethod" -> "xsd:string" [ label = "ml:hasParamScoring" ];
	"ml:RocAucScoreMethod" -> "xsd:string" [ label = "ml:hasParamAverage" ];
	"ml:MakeScorerMethod" -> "xsd:boolean" [ label = "ml:hasParamNeedsProba" ];
	"ml:LogLossMethod" -> "xsd:float" [ label = "ml:hasParamEps" ];
	"ml:FowlkesMallowsScoreMethod" -> "xsd:boolean" [ label = "ml:hasParamSparse" ];
	"ml:PrecisionRecallCurveMethod" -> "xsd:boolean" [ label = "ml:hasParamDropIntermediate" ];
	"ml:RocAucScoreMethod" -> "xsd:string" [ label = "ml:hasParamMultiClass" ];
	"ml:PairwiseDistancesChunkedMethod" -> "xsd:int" [ label = "ml:hasParamNJobs" ];
	"ml:PairwiseDistancesArgminMethod" -> "xsd:int" [ label = "ml:hasParamAxis" ];
	"ml:DcgScoreMethod" -> "xsd:int" [ label = "ml:hasParamK" ];
	"ml:MutualInfoScoreMethod" -> "xsd:string" [ label = "ml:hasParamContingency" ];
	"ml:MakeScorerMethod" -> "xsd:boolean" [ label = "ml:hasParamNeedsThreshold" ];
	"ml:PairwiseDistancesArgminMethod" -> "xsd:string" [ label = "ml:hasParamMetricKwargs" ];
	"ml:DcgScoreMethod" -> "xsd:float" [ label = "ml:hasParamLogBase" ];
	"ml:HingeLossMethod" -> "xsd:string" [ label = "ml:hasParamPredDecision" ];
	"ml:ClassLikelihoodRatiosMethod" -> "xsd:boolean" [ label = "ml:hasParamRaiseWarning" ];
	"ml:AdjustedMutualInfoScoreMethod" -> "xsd:string" [ label = "ml:hasParamAverageMethod" ];
	"ml:AccuracyScoreMethod" -> "xsd:boolean" [ label = "ml:hasParamNormalize" ];
	"ml:MakeScorerMethod" -> "xsd:boolean" [ label = "ml:hasParamGreaterIsBetter" ];
	"ml:MeanAbsolutePercentageErrorMethod" -> "xsd:string" [ label = "ml:hasParamMultioutput" ];
	"ml:PrecisionScoreMethod" -> "xsd:float" [ label = "ml:hasParamPosLabel" ];
	"ml:NanEuclideanDistancesMethod" -> "xsd:boolean" [ label = "ml:hasParamCopy" ];
	"ml:EuclideanDistancesMethod" -> "xsd:boolean" [ label = "ml:hasParamSquared" ];
	"ml:SilhouetteScoreMethod" -> "xsd:int" [ label = "ml:hasParamRandomState" ];
	"ml:FbetaScoreMethod" -> "xsd:float" [ label = "ml:hasParamBeta" ];
	"ml:MakeScorerMethod" -> "xsd:string" [ label = "ml:hasParamScoreFunc" ];
	"ml:PrecisionRecallFscoreSupportMethod" -> "xsd:string" [ label = "ml:hasParamWarnFor" ];
	"ml:ClassificationReportMethod" -> "xsd:int" [ label = "ml:hasParamDigits" ];
	"ml:ExplainedVarianceScoreMethod" -> "xsd:boolean" [ label = "ml:hasParamForceFinite" ];
	"ml:CohenKappaScoreMethod" -> "xsd:string" [ label = "ml:hasParamWeights" ];
	"ml:PairwiseDistancesArgminMinMethod" -> "xsd:string" [ label = "ml:hasParamMetric" ];
	"ml:CheckScoringMethod" -> "xsd:boolean" [ label = "ml:hasParamAllowNone" ];
	"ml:PairwiseKernelsMethod" -> "xsd:boolean" [ label = "ml:hasParamFilterParams" ];

}
