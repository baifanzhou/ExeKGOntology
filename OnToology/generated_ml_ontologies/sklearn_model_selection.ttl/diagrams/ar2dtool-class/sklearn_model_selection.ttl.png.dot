digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "ml:CrossValScore" "ml:CheckCv" "ml:RepeatedKFold" "ml:DataSplitting" "ml:TrainTestSplit" "ml:LeavePOut" "ml:LeavePGroupsOut" "ml:ValidationCurve" "ml:StratifiedKFold" "ml:TimeSeriesSplit" "ml:PermutationTestScore" "ml:GroupShuffleSplit" "ml:CrossValidate" "ml:CrossValPredict" "ml:KFold" "ml:LearningCurve" "ml:LearningCurveDisplay" ; /*classes style*/
	"ml:hasParamP" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTestScores" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamParams" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReturnTimes" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNGroups" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNPermutations" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamParamName" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamRandomState" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamVerbose" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReturnIndices" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamFitParams" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamGap" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNSplits" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReturnTrainScore" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamExploitIncrementalLearning" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNJobs" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoring" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamScoreName" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamStratify" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamClassifier" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamPreDispatch" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasDataSplittingMethod" -> "ml:hasDataSplittingMethod" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTrainSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMethod" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamCv" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamErrorScore" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTrainScores" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamEstimator" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamMaxTrainSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamTestSize" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamReturnEstimator" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamShuffle" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:hasParamNRepeats" -> "ds:hasParameter" [ label = "rdfs:subPropertyOf" ];
	"ml:LearningCurve" -> "xsd:boolean" [ label = "ml:hasParamExploitIncrementalLearning" ];
	"ml:TimeSeriesSplit" -> "xsd:int" [ label = "ml:hasParamMaxTrainSize" ];
	"ml:GroupShuffleSplit" -> "xsd:float" [ label = "ml:hasParamTrainSize" ];
	"ml:RepeatedKFold" -> "xsd:int" [ label = "ml:hasParamNRepeats" ];
	"ml:PermutationTestScore" -> "xsd:int" [ label = "ml:hasParamNPermutations" ];
	"ml:DataSplitting" -> "ml:PermutationTestScore" [ label = "ml:hasDataSplittingMethod" ];
	"ml:CrossValPredict" -> "xsd:string" [ label = "ml:hasParamFitParams" ];
	"ml:LearningCurveDisplay" -> "xsd:string" [ label = "ml:hasParamTestScores" ];
	"ml:LearningCurveDisplay" -> "xsd:string" [ label = "ml:hasParamTrainScores" ];
	"ml:CheckCv" -> "xsd:boolean" [ label = "ml:hasParamClassifier" ];
	"ml:TrainTestSplit" -> "xsd:string" [ label = "ml:hasParamStratify" ];
	"ml:KFold" -> "xsd:boolean" [ label = "ml:hasParamShuffle" ];
	"ml:CrossValScore" -> "xsd:string" [ label = "ml:hasParamCv" ];
	"ml:ValidationCurve" -> "xsd:string" [ label = "ml:hasParamParamName" ];
	"ml:CrossValScore" -> "xsd:string" [ label = "ml:hasParamScoring" ];
	"ml:TimeSeriesSplit" -> "xsd:int" [ label = "ml:hasParamGap" ];
	"ml:GroupShuffleSplit" -> "xsd:float" [ label = "ml:hasParamTestSize" ];
	"ml:CrossValidate" -> "xsd:boolean" [ label = "ml:hasParamReturnIndices" ];
	"ml:CrossValPredict" -> "xsd:string" [ label = "ml:hasParamMethod" ];
	"ml:LearningCurveDisplay" -> "xsd:string" [ label = "ml:hasParamScoreName" ];
	"ml:LeavePGroupsOut" -> "xsd:int" [ label = "ml:hasParamNGroups" ];
	"ml:CrossValPredict" -> "xsd:int" [ label = "ml:hasParamVerbose" ];
	"ml:RepeatedKFold" -> "xsd:int" [ label = "ml:hasParamRandomState" ];
	"ml:CrossValPredict" -> "xsd:int" [ label = "ml:hasParamPreDispatch" ];
	"ml:CrossValPredict" -> "xsd:string" [ label = "ml:hasParamParams" ];
	"ml:CrossValidate" -> "xsd:boolean" [ label = "ml:hasParamReturnTrainScore" ];
	"ml:CrossValidate" -> "xsd:boolean" [ label = "ml:hasParamReturnEstimator" ];
	"ml:LeavePOut" -> "xsd:int" [ label = "ml:hasParamP" ];
	"ml:StratifiedKFold" -> "xsd:int" [ label = "ml:hasParamNSplits" ];
	"ml:CrossValPredict" -> "xsd:string" [ label = "ml:hasParamEstimator" ];
	"ml:CrossValScore" -> "xsd:string" [ label = "ml:hasParamErrorScore" ];
	"ml:LearningCurve" -> "xsd:boolean" [ label = "ml:hasParamReturnTimes" ];
	"ml:CrossValPredict" -> "xsd:int" [ label = "ml:hasParamNJobs" ];

}
